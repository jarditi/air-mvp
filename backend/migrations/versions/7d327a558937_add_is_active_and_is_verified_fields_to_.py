"""Add is_active and is_verified fields to User model

Revision ID: 7d327a558937
Revises: d5982fcd239f
Create Date: 2025-06-13 03:35:40.004094

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7d327a558937'
down_revision: Union[str, None] = 'd5982fcd239f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_logs',
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('resource_id', sa.UUID(), nullable=True),
    sa.Column('old_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('new_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ip_address', postgresql.INET(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('api_endpoint', sa.String(length=255), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_id'), 'audit_logs', ['resource_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_type'), 'audit_logs', ['resource_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_table('integrations',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('platform', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('access_token', sa.Text(), nullable=True),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('scope', postgresql.ARRAY(sa.Text()), nullable=True),
    sa.Column('last_sync_at', sa.DateTime(), nullable=True),
    sa.Column('sync_frequency', sa.String(length=20), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('platform_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'platform', name='uq_user_platform')
    )
    op.create_index(op.f('ix_integrations_platform'), 'integrations', ['platform'], unique=False)
    op.create_index(op.f('ix_integrations_status'), 'integrations', ['status'], unique=False)
    op.create_index(op.f('ix_integrations_user_id'), 'integrations', ['user_id'], unique=False)
    op.create_table('ai_memories',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('contact_id', sa.UUID(), nullable=True),
    sa.Column('memory_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('confidence_score', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('source_interactions', postgresql.ARRAY(sa.UUID()), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.Text()), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_memories_contact_id'), 'ai_memories', ['contact_id'], unique=False)
    op.create_index(op.f('ix_ai_memories_memory_type'), 'ai_memories', ['memory_type'], unique=False)
    op.create_index(op.f('ix_ai_memories_user_id'), 'ai_memories', ['user_id'], unique=False)
    op.create_table('notifications',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('contact_id', sa.UUID(), nullable=True),
    sa.Column('notification_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('priority', sa.String(length=10), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('action_url', sa.Text(), nullable=True),
    sa.Column('notification_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('scheduled_for', sa.DateTime(), nullable=True),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_notification_type'), 'notifications', ['notification_type'], unique=False)
    op.create_index(op.f('ix_notifications_scheduled_for'), 'notifications', ['scheduled_for'], unique=False)
    op.create_index(op.f('ix_notifications_status'), 'notifications', ['status'], unique=False)
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    op.create_table('relationships',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('contact_a_id', sa.UUID(), nullable=False),
    sa.Column('contact_b_id', sa.UUID(), nullable=False),
    sa.Column('relationship_type', sa.String(length=50), nullable=True),
    sa.Column('strength_score', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('mutual_connections', sa.Integer(), nullable=True),
    sa.Column('shared_interactions', sa.Integer(), nullable=True),
    sa.Column('evidence_interactions', postgresql.ARRAY(sa.UUID()), nullable=True),
    sa.Column('detected_at', sa.DateTime(), nullable=True),
    sa.Column('last_updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['contact_a_id'], ['contacts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['contact_b_id'], ['contacts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'contact_a_id', 'contact_b_id', name='uq_user_contact_relationship')
    )
    op.create_index(op.f('ix_relationships_contact_a_id'), 'relationships', ['contact_a_id'], unique=False)
    op.create_index(op.f('ix_relationships_contact_b_id'), 'relationships', ['contact_b_id'], unique=False)
    op.create_index(op.f('ix_relationships_strength_score'), 'relationships', ['strength_score'], unique=False)
    op.create_index(op.f('ix_relationships_user_id'), 'relationships', ['user_id'], unique=False)
    op.create_table('sync_jobs',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('integration_id', sa.UUID(), nullable=False),
    sa.Column('job_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('progress_percentage', sa.Integer(), nullable=True),
    sa.Column('items_processed', sa.Integer(), nullable=True),
    sa.Column('items_total', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('job_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['integration_id'], ['integrations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sync_jobs_integration_id'), 'sync_jobs', ['integration_id'], unique=False)
    op.create_index(op.f('ix_sync_jobs_status'), 'sync_jobs', ['status'], unique=False)
    op.create_index(op.f('ix_sync_jobs_user_id'), 'sync_jobs', ['user_id'], unique=False)
    op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('is_verified', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'is_verified')
    op.drop_column('users', 'is_active')
    op.drop_index(op.f('ix_sync_jobs_user_id'), table_name='sync_jobs')
    op.drop_index(op.f('ix_sync_jobs_status'), table_name='sync_jobs')
    op.drop_index(op.f('ix_sync_jobs_integration_id'), table_name='sync_jobs')
    op.drop_table('sync_jobs')
    op.drop_index(op.f('ix_relationships_user_id'), table_name='relationships')
    op.drop_index(op.f('ix_relationships_strength_score'), table_name='relationships')
    op.drop_index(op.f('ix_relationships_contact_b_id'), table_name='relationships')
    op.drop_index(op.f('ix_relationships_contact_a_id'), table_name='relationships')
    op.drop_table('relationships')
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_status'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_scheduled_for'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_notification_type'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_ai_memories_user_id'), table_name='ai_memories')
    op.drop_index(op.f('ix_ai_memories_memory_type'), table_name='ai_memories')
    op.drop_index(op.f('ix_ai_memories_contact_id'), table_name='ai_memories')
    op.drop_table('ai_memories')
    op.drop_index(op.f('ix_integrations_user_id'), table_name='integrations')
    op.drop_index(op.f('ix_integrations_status'), table_name='integrations')
    op.drop_index(op.f('ix_integrations_platform'), table_name='integrations')
    op.drop_table('integrations')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_table('audit_logs')
    # ### end Alembic commands ###
