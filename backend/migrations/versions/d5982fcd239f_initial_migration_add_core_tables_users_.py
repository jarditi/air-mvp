"""Initial migration: Add core tables (users, contacts, interactions, interests)

Revision ID: d5982fcd239f
Revises: 
Create Date: 2025-06-13 02:36:08.382683

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd5982fcd239f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('auth_provider', sa.String(length=50), nullable=False),
    sa.Column('auth_provider_id', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('subscription_tier', sa.String(length=20), nullable=True),
    sa.Column('subscription_status', sa.String(length=20), nullable=True),
    sa.Column('onboarding_completed', sa.Boolean(), nullable=True),
    sa.Column('privacy_settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('contacts',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('company', sa.String(length=255), nullable=True),
    sa.Column('job_title', sa.String(length=255), nullable=True),
    sa.Column('linkedin_url', sa.Text(), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('avatar_url', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('relationship_strength', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('last_interaction_at', sa.DateTime(), nullable=True),
    sa.Column('interaction_frequency', sa.String(length=20), nullable=True),
    sa.Column('contact_source', sa.String(length=50), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.Text()), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contacts_company'), 'contacts', ['company'], unique=False)
    op.create_index(op.f('ix_contacts_email'), 'contacts', ['email'], unique=False)
    op.create_index(op.f('ix_contacts_last_interaction_at'), 'contacts', ['last_interaction_at'], unique=False)
    op.create_index(op.f('ix_contacts_user_id'), 'contacts', ['user_id'], unique=False)
    op.create_table('interactions',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('contact_id', sa.UUID(), nullable=False),
    sa.Column('interaction_type', sa.String(length=50), nullable=False),
    sa.Column('direction', sa.String(length=10), nullable=False),
    sa.Column('subject', sa.String(length=500), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('content_summary', sa.Text(), nullable=True),
    sa.Column('sentiment_score', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('interaction_date', sa.DateTime(), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('meeting_attendees', postgresql.ARRAY(sa.Text()), nullable=True),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('source_platform', sa.String(length=50), nullable=True),
    sa.Column('platform_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interactions_contact_id'), 'interactions', ['contact_id'], unique=False)
    op.create_index(op.f('ix_interactions_external_id'), 'interactions', ['external_id'], unique=False)
    op.create_index(op.f('ix_interactions_interaction_date'), 'interactions', ['interaction_date'], unique=False)
    op.create_index(op.f('ix_interactions_interaction_type'), 'interactions', ['interaction_type'], unique=False)
    op.create_index(op.f('ix_interactions_user_id'), 'interactions', ['user_id'], unique=False)
    op.create_table('interests',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('contact_id', sa.UUID(), nullable=False),
    sa.Column('interest_category', sa.String(length=100), nullable=False),
    sa.Column('interest_topic', sa.String(length=255), nullable=False),
    sa.Column('confidence_score', sa.Numeric(precision=3, scale=2), nullable=False),
    sa.Column('evidence_count', sa.Integer(), nullable=True),
    sa.Column('first_detected_at', sa.DateTime(), nullable=True),
    sa.Column('last_reinforced_at', sa.DateTime(), nullable=True),
    sa.Column('decay_factor', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('source_interactions', postgresql.ARRAY(sa.UUID()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('contact_id', 'interest_category', 'interest_topic', name='uq_contact_interest')
    )
    op.create_index(op.f('ix_interests_confidence_score'), 'interests', ['confidence_score'], unique=False)
    op.create_index(op.f('ix_interests_contact_id'), 'interests', ['contact_id'], unique=False)
    op.create_index(op.f('ix_interests_interest_category'), 'interests', ['interest_category'], unique=False)
    op.create_index(op.f('ix_interests_user_id'), 'interests', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_interests_user_id'), table_name='interests')
    op.drop_index(op.f('ix_interests_interest_category'), table_name='interests')
    op.drop_index(op.f('ix_interests_contact_id'), table_name='interests')
    op.drop_index(op.f('ix_interests_confidence_score'), table_name='interests')
    op.drop_table('interests')
    op.drop_index(op.f('ix_interactions_user_id'), table_name='interactions')
    op.drop_index(op.f('ix_interactions_interaction_type'), table_name='interactions')
    op.drop_index(op.f('ix_interactions_interaction_date'), table_name='interactions')
    op.drop_index(op.f('ix_interactions_external_id'), table_name='interactions')
    op.drop_index(op.f('ix_interactions_contact_id'), table_name='interactions')
    op.drop_table('interactions')
    op.drop_index(op.f('ix_contacts_user_id'), table_name='contacts')
    op.drop_index(op.f('ix_contacts_last_interaction_at'), table_name='contacts')
    op.drop_index(op.f('ix_contacts_email'), table_name='contacts')
    op.drop_index(op.f('ix_contacts_company'), table_name='contacts')
    op.drop_table('contacts')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
